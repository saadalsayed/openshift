name: PR AI Release Notes
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  generate-pr-notes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get PR Changes
        id: get_changes
        run: |
          # Get commit messages
          COMMITS=$(git log --pretty=format:"- %s" ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Generate AI Summary
        id: ai_summary
        run: |
          # Prepare prompt
          PROMPT="Summarize these commits into a brief release note:\n\n${{ steps.get_changes.outputs.commits }}"
          
          # Escape the prompt for JSON
          ESCAPED_PROMPT=$(echo "$PROMPT" | jq -Rs .)
          
          # Call OpenAI API
          RESPONSE=$(curl -s -X POST https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d "{
              \"model\": \"gpt-3.5-turbo\",
              \"messages\": [{\"role\": \"user\", \"content\": $ESCAPED_PROMPT}],
              \"max_tokens\": 300
            }")
          
          # Extract summary
          SUMMARY=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')
          
          # Save to output
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Update PR Description
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const summary = `${{ steps.ai_summary.outputs.summary }}`;
            const pr = context.payload.pull_request;
            
            const newBody = `${pr.body || ''}\n\n## AI-Generated Summary\n\n${summary}\n\n---\n*Auto-generated by AI Release Notes*`;
            
            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              body: newBody
            });